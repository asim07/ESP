{
	"id": "057b1d9c10d53d32c13dc5064beaedd0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"reward.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ncontract ffreecap is Ownable {\n\n    address admin;\n    IERC20 token;\n\n    uint private reward = 100;\n    uint private nftcounter;\n    mapping(address => uint) private rewards;\n    mapping(address => bool) private rewardholder;\n\n\n    constructor(address _token) {\n        token = IERC20(_token);\n    }\n\n    function addreward(address _address,uint _amount) external onlyOwner {\n        require(_address != address(0),\"cant not send to address 0\");\n        uint currentBalance = rewards[_address];\n        uint rewardamount = _amount * reward;\n        rewards[_address] = currentBalance + rewardamount;\n    }\n    \n    function removeReward(address _address,uint _amount)external onlyOwner{\n        require(_address != address(0),\"cant not send to address 0\");\n        removal(_address,_amount);\n    }\n\n    function removal(address ad,uint amount) internal {\n        for(uint i = 0;i<amount;i++){\n            if(rewards[ad] == 0){\n                break;\n            }\n            rewards[ad] -= reward;\n        }\n    }\n\n    function showrewards(address ad) public view returns(uint){\n        return rewards[ad];\n    }\n\n    function claimReward()external{\n        require(rewards[msg.sender] > 0,\"rewards\");\n        token.transfer(msg.sender,rewards[msg.sender]);\n    }\n    \n\n   \n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"reward.sol": {
				"ffreecap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addreward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "removeReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ad",
									"type": "address"
								}
							],
							"name": "showrewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"reward.sol\":227:1504  contract ffreecap is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"reward.sol\":323:326  100 */\n  0x64\n    /* \"reward.sol\":301:326  uint private reward = 100 */\n  0x03\n  sstore\n    /* \"reward.sol\":460:527  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"reward.sol\":513:519  _token */\n  dup1\n    /* \"reward.sol\":498:503  token */\n  0x02\n  0x00\n    /* \"reward.sol\":498:520  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"reward.sol\":460:527  constructor(address _token) {... */\n  pop\n    /* \"reward.sol\":227:1504  contract ffreecap is Ownable {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_28\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_31:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_33\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_36\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":932:1051   */\ntag_35:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_37\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"reward.sol\":227:1504  contract ffreecap is Ownable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"reward.sol\":227:1504  contract ffreecap is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc2130bfe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x13034644\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x52dcdb03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"reward.sol\":1248:1341  function showrewards(address ad) public view returns(uint){... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"reward.sol\":533:833  function addreward(address _address,uint _amount) external onlyOwner {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"reward.sol\":1347:1492  function claimReward()external{... */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"reward.sol\":843:1025  function removeReward(address _address,uint _amount)external onlyOwner{... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"reward.sol\":1248:1341  function showrewards(address ad) public view returns(uint){... */\n    tag_14:\n        /* \"reward.sol\":1301:1305  uint */\n      0x00\n        /* \"reward.sol\":1323:1330  rewards */\n      0x05\n        /* \"reward.sol\":1323:1334  rewards[ad] */\n      0x00\n        /* \"reward.sol\":1331:1333  ad */\n      dup4\n        /* \"reward.sol\":1323:1334  rewards[ad] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"reward.sol\":1316:1334  return rewards[ad] */\n      swap1\n      pop\n        /* \"reward.sol\":1248:1341  function showrewards(address ad) public view returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"reward.sol\":533:833  function addreward(address _address,uint _amount) external onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"reward.sol\":640:641  0 */\n      0x00\n        /* \"reward.sol\":620:642  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"reward.sol\":620:628  _address */\n      dup3\n        /* \"reward.sol\":620:642  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"reward.sol\":612:672  require(_address != address(0),\"cant not send to address 0\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"reward.sol\":682:701  uint currentBalance */\n      0x00\n        /* \"reward.sol\":704:711  rewards */\n      0x05\n        /* \"reward.sol\":704:721  rewards[_address] */\n      0x00\n        /* \"reward.sol\":712:720  _address */\n      dup5\n        /* \"reward.sol\":704:721  rewards[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"reward.sol\":682:721  uint currentBalance = rewards[_address] */\n      swap1\n      pop\n        /* \"reward.sol\":731:748  uint rewardamount */\n      0x00\n        /* \"reward.sol\":761:767  reward */\n      sload(0x03)\n        /* \"reward.sol\":751:758  _amount */\n      dup4\n        /* \"reward.sol\":751:767  _amount * reward */\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"reward.sol\":731:767  uint rewardamount = _amount * reward */\n      swap1\n      pop\n        /* \"reward.sol\":814:826  rewardamount */\n      dup1\n        /* \"reward.sol\":797:811  currentBalance */\n      dup3\n        /* \"reward.sol\":797:826  currentBalance + rewardamount */\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"reward.sol\":777:784  rewards */\n      0x05\n        /* \"reward.sol\":777:794  rewards[_address] */\n      0x00\n        /* \"reward.sol\":785:793  _address */\n      dup7\n        /* \"reward.sol\":777:794  rewards[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"reward.sol\":777:826  rewards[_address] = currentBalance + rewardamount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"reward.sol\":602:833  {... */\n      pop\n      pop\n        /* \"reward.sol\":533:833  function addreward(address _address,uint _amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_42\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"reward.sol\":1347:1492  function claimReward()external{... */\n    tag_28:\n        /* \"reward.sol\":1417:1418  0 */\n      0x00\n        /* \"reward.sol\":1395:1402  rewards */\n      0x05\n        /* \"reward.sol\":1395:1414  rewards[msg.sender] */\n      0x00\n        /* \"reward.sol\":1403:1413  msg.sender */\n      caller\n        /* \"reward.sol\":1395:1414  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"reward.sol\":1395:1418  rewards[msg.sender] > 0 */\n      gt\n        /* \"reward.sol\":1387:1429  require(rewards[msg.sender] > 0,\"rewards\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"reward.sol\":1439:1444  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"reward.sol\":1439:1453  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"reward.sol\":1454:1464  msg.sender */\n      caller\n        /* \"reward.sol\":1465:1472  rewards */\n      0x05\n        /* \"reward.sol\":1465:1484  rewards[msg.sender] */\n      0x00\n        /* \"reward.sol\":1473:1483  msg.sender */\n      caller\n        /* \"reward.sol\":1465:1484  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"reward.sol\":1439:1485  token.transfer(msg.sender,rewards[msg.sender]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap3\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      pop\n        /* \"reward.sol\":1347:1492  function claimReward()external{... */\n      jump\t// out\n        /* \"reward.sol\":843:1025  function removeReward(address _address,uint _amount)external onlyOwner{... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_42\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"reward.sol\":951:952  0 */\n      0x00\n        /* \"reward.sol\":931:953  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"reward.sol\":931:939  _address */\n      dup3\n        /* \"reward.sol\":931:953  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"reward.sol\":923:983  require(_address != address(0),\"cant not send to address 0\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_46\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"reward.sol\":993:1018  removal(_address,_amount) */\n      tag_78\n        /* \"reward.sol\":1001:1009  _address */\n      dup3\n        /* \"reward.sol\":1010:1017  _amount */\n      dup3\n        /* \"reward.sol\":993:1000  removal */\n      tag_79\n        /* \"reward.sol\":993:1018  removal(_address,_amount) */\n      jump\t// in\n    tag_78:\n        /* \"reward.sol\":843:1025  function removeReward(address _address,uint _amount)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_42\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"reward.sol\":1031:1242  function removal(address ad,uint amount) internal {... */\n    tag_79:\n        /* \"reward.sol\":1095:1101  uint i */\n      0x00\n        /* \"reward.sol\":1091:1236  for(uint i = 0;i<amount;i++){... */\n    tag_93:\n        /* \"reward.sol\":1108:1114  amount */\n      dup2\n        /* \"reward.sol\":1106:1107  i */\n      dup2\n        /* \"reward.sol\":1106:1114  i<amount */\n      lt\n        /* \"reward.sol\":1091:1236  for(uint i = 0;i<amount;i++){... */\n      iszero\n      tag_94\n      jumpi\n        /* \"reward.sol\":1151:1152  0 */\n      0x00\n        /* \"reward.sol\":1136:1143  rewards */\n      0x05\n        /* \"reward.sol\":1136:1147  rewards[ad] */\n      0x00\n        /* \"reward.sol\":1144:1146  ad */\n      dup6\n        /* \"reward.sol\":1136:1147  rewards[ad] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"reward.sol\":1136:1152  rewards[ad] == 0 */\n      sub\n        /* \"reward.sol\":1133:1191  if(rewards[ad] == 0){... */\n      iszero\n        /* \"reward.sol\":1171:1176  break */\n      tag_94\n        /* \"reward.sol\":1133:1191  if(rewards[ad] == 0){... */\n      jumpi\n        /* \"reward.sol\":1219:1225  reward */\n      sload(0x03)\n        /* \"reward.sol\":1204:1211  rewards */\n      0x05\n        /* \"reward.sol\":1204:1215  rewards[ad] */\n      0x00\n        /* \"reward.sol\":1212:1214  ad */\n      dup6\n        /* \"reward.sol\":1204:1215  rewards[ad] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"reward.sol\":1204:1225  rewards[ad] -= reward */\n      dup3\n      dup3\n      sload\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"reward.sol\":1115:1118  i++ */\n      dup1\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap2\n      pop\n      pop\n        /* \"reward.sol\":1091:1236  for(uint i = 0;i<amount;i++){... */\n      jump(tag_93)\n    tag_94:\n      pop\n        /* \"reward.sol\":1031:1242  function removal(address ad,uint amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_102:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_104:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_105:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_132\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_104\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_106:\n        /* \"#utility.yul\":641:665   */\n      tag_134\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_105\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_135\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_135:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_107:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_137\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_106\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_13:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_140\n      tag_102\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":917:1036   */\n    tag_139:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_141\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_107\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_108:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_109:\n        /* \"#utility.yul\":1346:1370   */\n      tag_144\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_108\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_16:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_146\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_109\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_110:\n        /* \"#utility.yul\":1684:1708   */\n      tag_148\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_108\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_149:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_111:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_151\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_110\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_19:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      dup1\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_154\n      tag_102\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1977:2096   */\n    tag_153:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_155\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_107\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_156\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_111\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2482   */\n    tag_112:\n        /* \"#utility.yul\":2451:2475   */\n      tag_158\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_105\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2439:2476   */\n      mstore\n        /* \"#utility.yul\":2364:2482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2710   */\n    tag_26:\n        /* \"#utility.yul\":2581:2585   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2622   */\n      add\n        /* \"#utility.yul\":2596:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2632:2703   */\n      tag_160\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2702   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup5\n        /* \"#utility.yul\":2632:2703   */\n      tag_112\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2488:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2885   */\n    tag_113:\n        /* \"#utility.yul\":2800:2811   */\n      0x00\n        /* \"#utility.yul\":2834:2840   */\n      dup3\n        /* \"#utility.yul\":2829:2832   */\n      dup3\n        /* \"#utility.yul\":2822:2841   */\n      mstore\n        /* \"#utility.yul\":2874:2878   */\n      0x20\n        /* \"#utility.yul\":2869:2872   */\n      dup3\n        /* \"#utility.yul\":2865:2879   */\n      add\n        /* \"#utility.yul\":2850:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2716:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3073   */\n    tag_114:\n        /* \"#utility.yul\":3031:3065   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3027:3028   */\n      0x00\n        /* \"#utility.yul\":3019:3025   */\n      dup3\n        /* \"#utility.yul\":3015:3029   */\n      add\n        /* \"#utility.yul\":3008:3066   */\n      mstore\n        /* \"#utility.yul\":2891:3073   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3079:3445   */\n    tag_115:\n        /* \"#utility.yul\":3221:3224   */\n      0x00\n        /* \"#utility.yul\":3242:3309   */\n      tag_164\n        /* \"#utility.yul\":3306:3308   */\n      0x20\n        /* \"#utility.yul\":3301:3304   */\n      dup4\n        /* \"#utility.yul\":3242:3309   */\n      tag_113\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3235:3309   */\n      swap2\n      pop\n        /* \"#utility.yul\":3318:3411   */\n      tag_165\n        /* \"#utility.yul\":3407:3410   */\n      dup3\n        /* \"#utility.yul\":3318:3411   */\n      tag_114\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3436:3438   */\n      0x20\n        /* \"#utility.yul\":3431:3434   */\n      dup3\n        /* \"#utility.yul\":3427:3439   */\n      add\n        /* \"#utility.yul\":3420:3439   */\n      swap1\n      pop\n        /* \"#utility.yul\":3079:3445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3451:3870   */\n    tag_42:\n        /* \"#utility.yul\":3617:3621   */\n      0x00\n        /* \"#utility.yul\":3655:3657   */\n      0x20\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3640:3658   */\n      add\n        /* \"#utility.yul\":3632:3658   */\n      swap1\n      pop\n        /* \"#utility.yul\":3704:3713   */\n      dup2\n        /* \"#utility.yul\":3698:3702   */\n      dup2\n        /* \"#utility.yul\":3694:3714   */\n      sub\n        /* \"#utility.yul\":3690:3691   */\n      0x00\n        /* \"#utility.yul\":3679:3688   */\n      dup4\n        /* \"#utility.yul\":3675:3692   */\n      add\n        /* \"#utility.yul\":3668:3715   */\n      mstore\n        /* \"#utility.yul\":3732:3863   */\n      tag_167\n        /* \"#utility.yul\":3858:3862   */\n      dup2\n        /* \"#utility.yul\":3732:3863   */\n      tag_115\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3724:3863   */\n      swap1\n      pop\n        /* \"#utility.yul\":3451:3870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3876:4052   */\n    tag_116:\n        /* \"#utility.yul\":4016:4044   */\n      0x63616e74206e6f742073656e6420746f20616464726573732030000000000000\n        /* \"#utility.yul\":4012:4013   */\n      0x00\n        /* \"#utility.yul\":4004:4010   */\n      dup3\n        /* \"#utility.yul\":4000:4014   */\n      add\n        /* \"#utility.yul\":3993:4045   */\n      mstore\n        /* \"#utility.yul\":3876:4052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4058:4424   */\n    tag_117:\n        /* \"#utility.yul\":4200:4203   */\n      0x00\n        /* \"#utility.yul\":4221:4288   */\n      tag_170\n        /* \"#utility.yul\":4285:4287   */\n      0x1a\n        /* \"#utility.yul\":4280:4283   */\n      dup4\n        /* \"#utility.yul\":4221:4288   */\n      tag_113\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4214:4288   */\n      swap2\n      pop\n        /* \"#utility.yul\":4297:4390   */\n      tag_171\n        /* \"#utility.yul\":4386:4389   */\n      dup3\n        /* \"#utility.yul\":4297:4390   */\n      tag_116\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4415:4417   */\n      0x20\n        /* \"#utility.yul\":4410:4413   */\n      dup3\n        /* \"#utility.yul\":4406:4418   */\n      add\n        /* \"#utility.yul\":4399:4418   */\n      swap1\n      pop\n        /* \"#utility.yul\":4058:4424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4430:4849   */\n    tag_46:\n        /* \"#utility.yul\":4596:4600   */\n      0x00\n        /* \"#utility.yul\":4634:4636   */\n      0x20\n        /* \"#utility.yul\":4623:4632   */\n      dup3\n        /* \"#utility.yul\":4619:4637   */\n      add\n        /* \"#utility.yul\":4611:4637   */\n      swap1\n      pop\n        /* \"#utility.yul\":4683:4692   */\n      dup2\n        /* \"#utility.yul\":4677:4681   */\n      dup2\n        /* \"#utility.yul\":4673:4693   */\n      sub\n        /* \"#utility.yul\":4669:4670   */\n      0x00\n        /* \"#utility.yul\":4658:4667   */\n      dup4\n        /* \"#utility.yul\":4654:4671   */\n      add\n        /* \"#utility.yul\":4647:4694   */\n      mstore\n        /* \"#utility.yul\":4711:4842   */\n      tag_173\n        /* \"#utility.yul\":4837:4841   */\n      dup2\n        /* \"#utility.yul\":4711:4842   */\n      tag_117\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4703:4842   */\n      swap1\n      pop\n        /* \"#utility.yul\":4430:4849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:5035   */\n    tag_118:\n        /* \"#utility.yul\":4903:4980   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4900:4901   */\n      0x00\n        /* \"#utility.yul\":4893:4981   */\n      mstore\n        /* \"#utility.yul\":5000:5004   */\n      0x11\n        /* \"#utility.yul\":4997:4998   */\n      0x04\n        /* \"#utility.yul\":4990:5005   */\n      mstore\n        /* \"#utility.yul\":5024:5028   */\n      0x24\n        /* \"#utility.yul\":5021:5022   */\n      0x00\n        /* \"#utility.yul\":5014:5029   */\n      revert\n        /* \"#utility.yul\":5041:5389   */\n    tag_48:\n        /* \"#utility.yul\":5081:5088   */\n      0x00\n        /* \"#utility.yul\":5104:5124   */\n      tag_176\n        /* \"#utility.yul\":5122:5123   */\n      dup3\n        /* \"#utility.yul\":5104:5124   */\n      tag_108\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5099:5124   */\n      swap2\n      pop\n        /* \"#utility.yul\":5138:5158   */\n      tag_177\n        /* \"#utility.yul\":5156:5157   */\n      dup4\n        /* \"#utility.yul\":5138:5158   */\n      tag_108\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5133:5158   */\n      swap3\n      pop\n        /* \"#utility.yul\":5326:5327   */\n      dup2\n        /* \"#utility.yul\":5258:5324   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5254:5328   */\n      div\n        /* \"#utility.yul\":5251:5252   */\n      dup4\n        /* \"#utility.yul\":5248:5329   */\n      gt\n        /* \"#utility.yul\":5243:5244   */\n      dup3\n        /* \"#utility.yul\":5236:5245   */\n      iszero\n        /* \"#utility.yul\":5229:5246   */\n      iszero\n        /* \"#utility.yul\":5225:5330   */\n      and\n        /* \"#utility.yul\":5222:5353   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":5333:5351   */\n      tag_179\n      tag_118\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5222:5353   */\n    tag_178:\n        /* \"#utility.yul\":5381:5382   */\n      dup3\n        /* \"#utility.yul\":5378:5379   */\n      dup3\n        /* \"#utility.yul\":5374:5383   */\n      mul\n        /* \"#utility.yul\":5363:5383   */\n      swap1\n      pop\n        /* \"#utility.yul\":5041:5389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5395:5700   */\n    tag_50:\n        /* \"#utility.yul\":5435:5438   */\n      0x00\n        /* \"#utility.yul\":5454:5474   */\n      tag_181\n        /* \"#utility.yul\":5472:5473   */\n      dup3\n        /* \"#utility.yul\":5454:5474   */\n      tag_108\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5449:5474   */\n      swap2\n      pop\n        /* \"#utility.yul\":5488:5508   */\n      tag_182\n        /* \"#utility.yul\":5506:5507   */\n      dup4\n        /* \"#utility.yul\":5488:5508   */\n      tag_108\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5483:5508   */\n      swap3\n      pop\n        /* \"#utility.yul\":5642:5643   */\n      dup3\n        /* \"#utility.yul\":5574:5640   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5570:5644   */\n      sub\n        /* \"#utility.yul\":5567:5568   */\n      dup3\n        /* \"#utility.yul\":5564:5645   */\n      gt\n        /* \"#utility.yul\":5561:5668   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":5648:5666   */\n      tag_184\n      tag_118\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5561:5668   */\n    tag_183:\n        /* \"#utility.yul\":5692:5693   */\n      dup3\n        /* \"#utility.yul\":5689:5690   */\n      dup3\n        /* \"#utility.yul\":5685:5694   */\n      add\n        /* \"#utility.yul\":5678:5694   */\n      swap1\n      pop\n        /* \"#utility.yul\":5395:5700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5706:5863   */\n    tag_119:\n        /* \"#utility.yul\":5846:5855   */\n      0x7265776172647300000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5842:5843   */\n      0x00\n        /* \"#utility.yul\":5834:5840   */\n      dup3\n        /* \"#utility.yul\":5830:5844   */\n      add\n        /* \"#utility.yul\":5823:5856   */\n      mstore\n        /* \"#utility.yul\":5706:5863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5869:6234   */\n    tag_120:\n        /* \"#utility.yul\":6011:6014   */\n      0x00\n        /* \"#utility.yul\":6032:6098   */\n      tag_187\n        /* \"#utility.yul\":6096:6097   */\n      0x07\n        /* \"#utility.yul\":6091:6094   */\n      dup4\n        /* \"#utility.yul\":6032:6098   */\n      tag_113\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6025:6098   */\n      swap2\n      pop\n        /* \"#utility.yul\":6107:6200   */\n      tag_188\n        /* \"#utility.yul\":6196:6199   */\n      dup3\n        /* \"#utility.yul\":6107:6200   */\n      tag_119\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6225:6227   */\n      0x20\n        /* \"#utility.yul\":6220:6223   */\n      dup3\n        /* \"#utility.yul\":6216:6228   */\n      add\n        /* \"#utility.yul\":6209:6228   */\n      swap1\n      pop\n        /* \"#utility.yul\":5869:6234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6240:6659   */\n    tag_63:\n        /* \"#utility.yul\":6406:6410   */\n      0x00\n        /* \"#utility.yul\":6444:6446   */\n      0x20\n        /* \"#utility.yul\":6433:6442   */\n      dup3\n        /* \"#utility.yul\":6429:6447   */\n      add\n        /* \"#utility.yul\":6421:6447   */\n      swap1\n      pop\n        /* \"#utility.yul\":6493:6502   */\n      dup2\n        /* \"#utility.yul\":6487:6491   */\n      dup2\n        /* \"#utility.yul\":6483:6503   */\n      sub\n        /* \"#utility.yul\":6479:6480   */\n      0x00\n        /* \"#utility.yul\":6468:6477   */\n      dup4\n        /* \"#utility.yul\":6464:6481   */\n      add\n        /* \"#utility.yul\":6457:6504   */\n      mstore\n        /* \"#utility.yul\":6521:6652   */\n      tag_190\n        /* \"#utility.yul\":6647:6651   */\n      dup2\n        /* \"#utility.yul\":6521:6652   */\n      tag_120\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6513:6652   */\n      swap1\n      pop\n        /* \"#utility.yul\":6240:6659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6665:6997   */\n    tag_65:\n        /* \"#utility.yul\":6786:6790   */\n      0x00\n        /* \"#utility.yul\":6824:6826   */\n      0x40\n        /* \"#utility.yul\":6813:6822   */\n      dup3\n        /* \"#utility.yul\":6809:6827   */\n      add\n        /* \"#utility.yul\":6801:6827   */\n      swap1\n      pop\n        /* \"#utility.yul\":6837:6908   */\n      tag_192\n        /* \"#utility.yul\":6905:6906   */\n      0x00\n        /* \"#utility.yul\":6894:6903   */\n      dup4\n        /* \"#utility.yul\":6890:6907   */\n      add\n        /* \"#utility.yul\":6881:6887   */\n      dup6\n        /* \"#utility.yul\":6837:6908   */\n      tag_112\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6918:6990   */\n      tag_193\n        /* \"#utility.yul\":6986:6988   */\n      0x20\n        /* \"#utility.yul\":6975:6984   */\n      dup4\n        /* \"#utility.yul\":6971:6989   */\n      add\n        /* \"#utility.yul\":6962:6968   */\n      dup5\n        /* \"#utility.yul\":6918:6990   */\n      tag_109\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6665:6997   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7003:7093   */\n    tag_121:\n        /* \"#utility.yul\":7037:7044   */\n      0x00\n        /* \"#utility.yul\":7080:7085   */\n      dup2\n        /* \"#utility.yul\":7073:7086   */\n      iszero\n        /* \"#utility.yul\":7066:7087   */\n      iszero\n        /* \"#utility.yul\":7055:7087   */\n      swap1\n      pop\n        /* \"#utility.yul\":7003:7093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7099:7215   */\n    tag_122:\n        /* \"#utility.yul\":7169:7190   */\n      tag_196\n        /* \"#utility.yul\":7184:7189   */\n      dup2\n        /* \"#utility.yul\":7169:7190   */\n      tag_121\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7162:7167   */\n      dup2\n        /* \"#utility.yul\":7159:7191   */\n      eq\n        /* \"#utility.yul\":7149:7209   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":7205:7206   */\n      0x00\n        /* \"#utility.yul\":7202:7203   */\n      dup1\n        /* \"#utility.yul\":7195:7207   */\n      revert\n        /* \"#utility.yul\":7149:7209   */\n    tag_197:\n        /* \"#utility.yul\":7099:7215   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7221:7358   */\n    tag_123:\n        /* \"#utility.yul\":7275:7280   */\n      0x00\n        /* \"#utility.yul\":7306:7312   */\n      dup2\n        /* \"#utility.yul\":7300:7313   */\n      mload\n        /* \"#utility.yul\":7291:7313   */\n      swap1\n      pop\n        /* \"#utility.yul\":7322:7352   */\n      tag_199\n        /* \"#utility.yul\":7346:7351   */\n      dup2\n        /* \"#utility.yul\":7322:7352   */\n      tag_122\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7221:7358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7364:7709   */\n    tag_69:\n        /* \"#utility.yul\":7431:7437   */\n      0x00\n        /* \"#utility.yul\":7480:7482   */\n      0x20\n        /* \"#utility.yul\":7468:7477   */\n      dup3\n        /* \"#utility.yul\":7459:7466   */\n      dup5\n        /* \"#utility.yul\":7455:7478   */\n      sub\n        /* \"#utility.yul\":7451:7483   */\n      slt\n        /* \"#utility.yul\":7448:7567   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":7486:7565   */\n      tag_202\n      tag_102\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7448:7567   */\n    tag_201:\n        /* \"#utility.yul\":7606:7607   */\n      0x00\n        /* \"#utility.yul\":7631:7692   */\n      tag_203\n        /* \"#utility.yul\":7684:7691   */\n      dup5\n        /* \"#utility.yul\":7675:7681   */\n      dup3\n        /* \"#utility.yul\":7664:7673   */\n      dup6\n        /* \"#utility.yul\":7660:7682   */\n      add\n        /* \"#utility.yul\":7631:7692   */\n      tag_123\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":7621:7692   */\n      swap2\n      pop\n        /* \"#utility.yul\":7577:7702   */\n      pop\n        /* \"#utility.yul\":7364:7709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7715:7940   */\n    tag_124:\n        /* \"#utility.yul\":7855:7889   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7851:7852   */\n      0x00\n        /* \"#utility.yul\":7843:7849   */\n      dup3\n        /* \"#utility.yul\":7839:7853   */\n      add\n        /* \"#utility.yul\":7832:7890   */\n      mstore\n        /* \"#utility.yul\":7924:7932   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7919:7921   */\n      0x20\n        /* \"#utility.yul\":7911:7917   */\n      dup3\n        /* \"#utility.yul\":7907:7922   */\n      add\n        /* \"#utility.yul\":7900:7933   */\n      mstore\n        /* \"#utility.yul\":7715:7940   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7946:8312   */\n    tag_125:\n        /* \"#utility.yul\":8088:8091   */\n      0x00\n        /* \"#utility.yul\":8109:8176   */\n      tag_206\n        /* \"#utility.yul\":8173:8175   */\n      0x26\n        /* \"#utility.yul\":8168:8171   */\n      dup4\n        /* \"#utility.yul\":8109:8176   */\n      tag_113\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8102:8176   */\n      swap2\n      pop\n        /* \"#utility.yul\":8185:8278   */\n      tag_207\n        /* \"#utility.yul\":8274:8277   */\n      dup3\n        /* \"#utility.yul\":8185:8278   */\n      tag_124\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":8303:8305   */\n      0x40\n        /* \"#utility.yul\":8298:8301   */\n      dup3\n        /* \"#utility.yul\":8294:8306   */\n      add\n        /* \"#utility.yul\":8287:8306   */\n      swap1\n      pop\n        /* \"#utility.yul\":7946:8312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8318:8737   */\n    tag_88:\n        /* \"#utility.yul\":8484:8488   */\n      0x00\n        /* \"#utility.yul\":8522:8524   */\n      0x20\n        /* \"#utility.yul\":8511:8520   */\n      dup3\n        /* \"#utility.yul\":8507:8525   */\n      add\n        /* \"#utility.yul\":8499:8525   */\n      swap1\n      pop\n        /* \"#utility.yul\":8571:8580   */\n      dup2\n        /* \"#utility.yul\":8565:8569   */\n      dup2\n        /* \"#utility.yul\":8561:8581   */\n      sub\n        /* \"#utility.yul\":8557:8558   */\n      0x00\n        /* \"#utility.yul\":8546:8555   */\n      dup4\n        /* \"#utility.yul\":8542:8559   */\n      add\n        /* \"#utility.yul\":8535:8582   */\n      mstore\n        /* \"#utility.yul\":8599:8730   */\n      tag_209\n        /* \"#utility.yul\":8725:8729   */\n      dup2\n        /* \"#utility.yul\":8599:8730   */\n      tag_125\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8591:8730   */\n      swap1\n      pop\n        /* \"#utility.yul\":8318:8737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8743:8934   */\n    tag_98:\n        /* \"#utility.yul\":8783:8787   */\n      0x00\n        /* \"#utility.yul\":8803:8823   */\n      tag_211\n        /* \"#utility.yul\":8821:8822   */\n      dup3\n        /* \"#utility.yul\":8803:8823   */\n      tag_108\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":8798:8823   */\n      swap2\n      pop\n        /* \"#utility.yul\":8837:8857   */\n      tag_212\n        /* \"#utility.yul\":8855:8856   */\n      dup4\n        /* \"#utility.yul\":8837:8857   */\n      tag_108\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8832:8857   */\n      swap3\n      pop\n        /* \"#utility.yul\":8876:8877   */\n      dup3\n        /* \"#utility.yul\":8873:8874   */\n      dup3\n        /* \"#utility.yul\":8870:8878   */\n      lt\n        /* \"#utility.yul\":8867:8901   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":8881:8899   */\n      tag_214\n      tag_118\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":8867:8901   */\n    tag_213:\n        /* \"#utility.yul\":8926:8927   */\n      dup3\n        /* \"#utility.yul\":8923:8924   */\n      dup3\n        /* \"#utility.yul\":8919:8928   */\n      sub\n        /* \"#utility.yul\":8911:8928   */\n      swap1\n      pop\n        /* \"#utility.yul\":8743:8934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8940:9173   */\n    tag_100:\n        /* \"#utility.yul\":8979:8982   */\n      0x00\n        /* \"#utility.yul\":9002:9026   */\n      tag_216\n        /* \"#utility.yul\":9020:9025   */\n      dup3\n        /* \"#utility.yul\":9002:9026   */\n      tag_108\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":8993:9026   */\n      swap2\n      pop\n        /* \"#utility.yul\":9048:9114   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9041:9046   */\n      dup3\n        /* \"#utility.yul\":9038:9115   */\n      sub\n        /* \"#utility.yul\":9035:9138   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":9118:9136   */\n      tag_218\n      tag_118\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":9035:9138   */\n    tag_217:\n        /* \"#utility.yul\":9165:9166   */\n      0x01\n        /* \"#utility.yul\":9158:9163   */\n      dup3\n        /* \"#utility.yul\":9154:9167   */\n      add\n        /* \"#utility.yul\":9147:9167   */\n      swap1\n      pop\n        /* \"#utility.yul\":8940:9173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205469ca244494ac5f6961e49c34fc2d18035cc90c75cc04d6259d0f74a4990db864736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_369": {
									"entryPoint": null,
									"id": 369,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_310": {
									"entryPoint": 164,
									"id": 310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 172,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260646003553480156200001657600080fd5b50604051620010273803806200102783398181016040528101906200003c9190620001da565b6200005c62000050620000a460201b60201c565b620000ac60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200020c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a28262000175565b9050919050565b620001b48162000195565b8114620001c057600080fd5b50565b600081519050620001d481620001a9565b92915050565b600060208284031215620001f357620001f262000170565b5b60006200020384828501620001c3565b91505092915050565b610e0b806200021c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d8578063b88a802f146100f6578063c2130bfe14610100578063f2fde38b1461011c5761007d565b8063130346441461008257806352dcdb03146100b2578063715018a6146100ce575b600080fd5b61009c6004803603810190610097919061090e565b610138565b6040516100a99190610954565b60405180910390f35b6100cc60048036038101906100c7919061099b565b610181565b005b6100d6610317565b005b6100e061039f565b6040516100ed91906109ea565b60405180910390f35b6100fe6103c8565b005b61011a6004803603810190610115919061099b565b61052c565b005b6101366004803603810190610131919061090e565b610625565b005b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61018961071c565b73ffffffffffffffffffffffffffffffffffffffff166101a761039f565b73ffffffffffffffffffffffffffffffffffffffff16146101fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f490610a62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610ace565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600354836102c09190610b1d565b905080826102ce9190610b77565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b61031f61071c565b73ffffffffffffffffffffffffffffffffffffffff1661033d61039f565b73ffffffffffffffffffffffffffffffffffffffff1614610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90610a62565b60405180910390fd5b61039d6000610724565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044190610c19565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016104e6929190610c39565b6020604051808303816000875af1158015610505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105299190610c9a565b50565b61053461071c565b73ffffffffffffffffffffffffffffffffffffffff1661055261039f565b73ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059f90610a62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610ace565b60405180910390fd5b61062182826107e8565b5050565b61062d61071c565b73ffffffffffffffffffffffffffffffffffffffff1661064b61039f565b73ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890610a62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070790610d39565b60405180910390fd5b61071981610724565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005b818110156108a6576000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403156108a657600354600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461088c9190610d59565b92505081905550808061089e90610d8d565b9150506107eb565b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108db826108b0565b9050919050565b6108eb816108d0565b81146108f657600080fd5b50565b600081359050610908816108e2565b92915050565b600060208284031215610924576109236108ab565b5b6000610932848285016108f9565b91505092915050565b6000819050919050565b61094e8161093b565b82525050565b60006020820190506109696000830184610945565b92915050565b6109788161093b565b811461098357600080fd5b50565b6000813590506109958161096f565b92915050565b600080604083850312156109b2576109b16108ab565b5b60006109c0858286016108f9565b92505060206109d185828601610986565b9150509250929050565b6109e4816108d0565b82525050565b60006020820190506109ff60008301846109db565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a4c602083610a05565b9150610a5782610a16565b602082019050919050565b60006020820190508181036000830152610a7b81610a3f565b9050919050565b7f63616e74206e6f742073656e6420746f20616464726573732030000000000000600082015250565b6000610ab8601a83610a05565b9150610ac382610a82565b602082019050919050565b60006020820190508181036000830152610ae781610aab565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b288261093b565b9150610b338361093b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b6c57610b6b610aee565b5b828202905092915050565b6000610b828261093b565b9150610b8d8361093b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bc257610bc1610aee565b5b828201905092915050565b7f7265776172647300000000000000000000000000000000000000000000000000600082015250565b6000610c03600783610a05565b9150610c0e82610bcd565b602082019050919050565b60006020820190508181036000830152610c3281610bf6565b9050919050565b6000604082019050610c4e60008301856109db565b610c5b6020830184610945565b9392505050565b60008115159050919050565b610c7781610c62565b8114610c8257600080fd5b50565b600081519050610c9481610c6e565b92915050565b600060208284031215610cb057610caf6108ab565b5b6000610cbe84828501610c85565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d23602683610a05565b9150610d2e82610cc7565b604082019050919050565b60006020820190508181036000830152610d5281610d16565b9050919050565b6000610d648261093b565b9150610d6f8361093b565b925082821015610d8257610d81610aee565b5b828203905092915050565b6000610d988261093b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610dca57610dc9610aee565b5b60018201905091905056fea26469706673582212205469ca244494ac5f6961e49c34fc2d18035cc90c75cc04d6259d0f74a4990db864736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1027 CODESIZE SUB DUP1 PUSH3 0x1027 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x1DA JUMP JUMPDEST PUSH3 0x5C PUSH3 0x50 PUSH3 0xA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x20C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A2 DUP3 PUSH3 0x175 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B4 DUP2 PUSH3 0x195 JUMP JUMPDEST DUP2 EQ PUSH3 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D4 DUP2 PUSH3 0x1A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1F3 JUMPI PUSH3 0x1F2 PUSH3 0x170 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x203 DUP5 DUP3 DUP6 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0B DUP1 PUSH3 0x21C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xC2130BFE EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x13034644 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x52DCDB03 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x317 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH2 0x3C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189 PUSH2 0x71C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A7 PUSH2 0x39F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP4 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x31F PUSH2 0x71C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x33D PUSH2 0x39F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39D PUSH1 0x0 PUSH2 0x724 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP3 SWAP2 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0xC9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x534 PUSH2 0x71C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x552 PUSH2 0x39F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x621 DUP3 DUP3 PUSH2 0x7E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D PUSH2 0x71C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x64B PUSH2 0x39F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x707 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x719 DUP2 PUSH2 0x724 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x89E SWAP1 PUSH2 0xD8D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DB DUP3 PUSH2 0x8B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EB DUP2 PUSH2 0x8D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x908 DUP2 PUSH2 0x8E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH2 0x923 PUSH2 0x8AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x932 DUP5 DUP3 DUP6 ADD PUSH2 0x8F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94E DUP2 PUSH2 0x93B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x969 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x978 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP2 EQ PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x995 DUP2 PUSH2 0x96F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B1 PUSH2 0x8AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C0 DUP6 DUP3 DUP7 ADD PUSH2 0x8F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9D1 DUP6 DUP3 DUP7 ADD PUSH2 0x986 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E4 DUP2 PUSH2 0x8D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4C PUSH1 0x20 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xA57 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA7B DUP2 PUSH2 0xA3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E74206E6F742073656E6420746F20616464726573732030000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB8 PUSH1 0x1A DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC3 DUP3 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE7 DUP2 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB28 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH2 0xB33 DUP4 PUSH2 0x93B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB6C JUMPI PUSH2 0xB6B PUSH2 0xAEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB82 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH2 0xB8D DUP4 PUSH2 0x93B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBC2 JUMPI PUSH2 0xBC1 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7265776172647300000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 PUSH1 0x7 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0E DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC32 DUP2 PUSH2 0xBF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0xC5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC77 DUP2 PUSH2 0xC62 JUMP JUMPDEST DUP2 EQ PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC94 DUP2 PUSH2 0xC6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH2 0xCAF PUSH2 0x8AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP5 DUP3 DUP6 ADD PUSH2 0xC85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x26 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2E DUP3 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD52 DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD64 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH2 0xD6F DUP4 PUSH2 0x93B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xD82 JUMPI PUSH2 0xD81 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD98 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH10 0xCA244494AC5F6961E49C CALLVALUE 0xFC 0x2D XOR SUB 0x5C 0xC9 0xC PUSH22 0xCC04D6259D0F74A4990DB864736F6C634300080E0033 ",
							"sourceMap": "227:1277:5:-:0;;;323:3;301:25;;460:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;513:6:5;498:5;;:22;;;;;;;;;;;;;;;;;;460:67;227:1277;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;227:1277:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_310": {
									"entryPoint": 1820,
									"id": 310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 1828,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addreward_409": {
									"entryPoint": 385,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimReward_505": {
									"entryPoint": 968,
									"id": 505,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 927,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removal_468": {
									"entryPoint": 2024,
									"id": 468,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@removeReward_434": {
									"entryPoint": 1324,
									"id": 434,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 791,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@showrewards_480": {
									"entryPoint": 312,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 1573,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde": {
									"entryPoint": 3021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9176:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:6",
														"type": ""
													}
												],
												"src": "1176:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:6",
														"type": ""
													}
												],
												"src": "1259:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:6",
														"type": ""
													}
												],
												"src": "1383:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:6"
															},
															"nodeType": "YulIf",
															"src": "1664:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													}
												],
												"src": "1611:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													}
												],
												"src": "1739:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1967:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:32:6"
															},
															"nodeType": "YulIf",
															"src": "1977:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2106:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2150:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2233:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1929:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1940:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1952:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1960:6:6",
														"type": ""
													}
												],
												"src": "1884:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2429:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2451:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2451:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2439:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2417:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2424:3:6",
														"type": ""
													}
												],
												"src": "2364:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2608:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2596:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2632:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2632:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2558:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2581:4:6",
														"type": ""
													}
												],
												"src": "2488:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2829:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2834:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2850:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2869:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2874:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2850:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2784:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2789:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2800:11:6",
														"type": ""
													}
												],
												"src": "2716:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2997:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3015:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3031:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3008:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3008:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2989:6:6",
														"type": ""
													}
												],
												"src": "2891:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3225:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3235:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3301:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3306:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3242:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3242:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3235:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3407:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3318:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3420:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3427:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3427:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3420:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3213:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3221:3:6",
														"type": ""
													}
												],
												"src": "3079:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3632:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3644:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3655:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3640:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3632:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3679:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3690:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3675:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3675:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3698:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3704:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3694:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3694:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3668:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3668:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3724:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3858:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3732:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3724:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3602:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3617:4:6",
														"type": ""
													}
												],
												"src": "3451:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3982:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4004:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4012:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:14:6"
																	},
																	{
																		"hexValue": "63616e74206e6f742073656e6420746f20616464726573732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4016:28:6",
																		"type": "",
																		"value": "cant not send to address 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3974:6:6",
														"type": ""
													}
												],
												"src": "3876:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4204:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4214:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4280:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4285:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4221:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4221:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4214:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4386:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402",
																	"nodeType": "YulIdentifier",
																	"src": "4297:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4297:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4399:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4410:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4415:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4406:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4406:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4200:3:6",
														"type": ""
													}
												],
												"src": "4058:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4601:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4611:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4623:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4619:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4611:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4658:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4669:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4654:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4654:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4677:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4683:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4673:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4673:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4703:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4837:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4711:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4711:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4703:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4581:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4596:4:6",
														"type": ""
													}
												],
												"src": "4430:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4883:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4893:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4893:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4997:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5000:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4990:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5021:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5014:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5014:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5014:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4855:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5089:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5099:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5122:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5104:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5104:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5099:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5133:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5138:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5138:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5133:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5331:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5333:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5333:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5333:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5243:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5236:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5236:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5229:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5229:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5251:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5258:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5326:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5254:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5254:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5248:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5225:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5225:105:6"
															},
															"nodeType": "YulIf",
															"src": "5222:131:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5363:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5378:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5381:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5374:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5363:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5072:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5075:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5081:7:6",
														"type": ""
													}
												],
												"src": "5041:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5439:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5449:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5472:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5454:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5449:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5483:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5506:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5488:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5488:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5483:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5646:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5648:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5648:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5648:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5567:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5574:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5642:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5570:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5570:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5564:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:81:6"
															},
															"nodeType": "YulIf",
															"src": "5561:107:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5678:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5689:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5692:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5685:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5678:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5426:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5429:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5435:3:6",
														"type": ""
													}
												],
												"src": "5395:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5812:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5834:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5842:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5830:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5830:14:6"
																	},
																	{
																		"hexValue": "72657761726473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5846:9:6",
																		"type": "",
																		"value": "rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5823:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5823:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5804:6:6",
														"type": ""
													}
												],
												"src": "5706:157:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6015:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6025:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6091:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6096:1:6",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6032:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6032:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6025:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6196:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde",
																	"nodeType": "YulIdentifier",
																	"src": "6107:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6107:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6107:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6209:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6220:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6216:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6209:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6003:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6011:3:6",
														"type": ""
													}
												],
												"src": "5869:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6411:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6421:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6433:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6444:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6421:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6468:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6479:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6464:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6464:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6487:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6493:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6457:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6457:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6513:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6647:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6521:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6513:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6391:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6406:4:6",
														"type": ""
													}
												],
												"src": "6240:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6791:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6801:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6813:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6824:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6809:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6801:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6881:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6894:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6905:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6890:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6890:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6837:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6837:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6837:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6962:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6986:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6971:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6971:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6918:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6918:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6918:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6755:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6767:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6775:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6786:4:6",
														"type": ""
													}
												],
												"src": "6665:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7045:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7055:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7080:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7073:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7073:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7066:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7066:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7055:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7027:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7037:7:6",
														"type": ""
													}
												],
												"src": "7003:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7139:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7193:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7202:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7205:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7195:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7195:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7195:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7162:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7184:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7169:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7169:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7159:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7159:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7152:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7152:40:6"
															},
															"nodeType": "YulIf",
															"src": "7149:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7132:5:6",
														"type": ""
													}
												],
												"src": "7099:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7281:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7291:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7306:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7300:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7300:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7291:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7346:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7322:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7322:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7322:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7259:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7267:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7275:5:6",
														"type": ""
													}
												],
												"src": "7221:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7438:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7484:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7486:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7486:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7459:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7468:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7455:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7455:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7480:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7451:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:32:6"
															},
															"nodeType": "YulIf",
															"src": "7448:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "7577:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7592:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7596:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7621:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7664:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7675:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7660:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7660:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7684:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7631:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7631:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7621:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7408:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7419:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7431:6:6",
														"type": ""
													}
												],
												"src": "7364:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7821:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7843:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7851:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7839:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7839:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7855:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7832:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7832:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7832:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7911:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7919:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7907:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7907:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7924:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7900:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7900:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7900:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7813:6:6",
														"type": ""
													}
												],
												"src": "7715:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8092:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8102:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8168:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8173:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8109:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8109:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8102:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8274:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "8185:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8185:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8185:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8287:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8298:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8303:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8294:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8294:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8287:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8080:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8088:3:6",
														"type": ""
													}
												],
												"src": "7946:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8489:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8499:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8511:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8522:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8507:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8507:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8499:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8546:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8557:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8542:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8542:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8565:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8571:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8561:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8561:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8535:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8535:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8535:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8591:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8725:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8599:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8599:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8591:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8469:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8484:4:6",
														"type": ""
													}
												],
												"src": "8318:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8788:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8798:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8821:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8803:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8803:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8798:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8832:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8855:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8837:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8837:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8832:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8879:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8881:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8881:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8881:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8873:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8876:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8870:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8870:8:6"
															},
															"nodeType": "YulIf",
															"src": "8867:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8911:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8923:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8926:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8919:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8919:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8911:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8774:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8777:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8783:4:6",
														"type": ""
													}
												],
												"src": "8743:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8983:190:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8993:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9020:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9002:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9002:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8993:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9116:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9118:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9118:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9118:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9041:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9048:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9038:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9038:77:6"
															},
															"nodeType": "YulIf",
															"src": "9035:103:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9147:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9158:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9165:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9154:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9154:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9147:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8969:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8979:3:6",
														"type": ""
													}
												],
												"src": "8940:233:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402(memPtr) {\n\n        mstore(add(memPtr, 0), \"cant not send to address 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde(memPtr) {\n\n        mstore(add(memPtr, 0), \"rewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d8578063b88a802f146100f6578063c2130bfe14610100578063f2fde38b1461011c5761007d565b8063130346441461008257806352dcdb03146100b2578063715018a6146100ce575b600080fd5b61009c6004803603810190610097919061090e565b610138565b6040516100a99190610954565b60405180910390f35b6100cc60048036038101906100c7919061099b565b610181565b005b6100d6610317565b005b6100e061039f565b6040516100ed91906109ea565b60405180910390f35b6100fe6103c8565b005b61011a6004803603810190610115919061099b565b61052c565b005b6101366004803603810190610131919061090e565b610625565b005b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61018961071c565b73ffffffffffffffffffffffffffffffffffffffff166101a761039f565b73ffffffffffffffffffffffffffffffffffffffff16146101fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f490610a62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361026c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026390610ace565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600354836102c09190610b1d565b905080826102ce9190610b77565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b61031f61071c565b73ffffffffffffffffffffffffffffffffffffffff1661033d61039f565b73ffffffffffffffffffffffffffffffffffffffff1614610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90610a62565b60405180910390fd5b61039d6000610724565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044190610c19565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016104e6929190610c39565b6020604051808303816000875af1158015610505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105299190610c9a565b50565b61053461071c565b73ffffffffffffffffffffffffffffffffffffffff1661055261039f565b73ffffffffffffffffffffffffffffffffffffffff16146105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059f90610a62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610ace565b60405180910390fd5b61062182826107e8565b5050565b61062d61071c565b73ffffffffffffffffffffffffffffffffffffffff1661064b61039f565b73ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890610a62565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070790610d39565b60405180910390fd5b61071981610724565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005b818110156108a6576000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403156108a657600354600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461088c9190610d59565b92505081905550808061089e90610d8d565b9150506107eb565b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108db826108b0565b9050919050565b6108eb816108d0565b81146108f657600080fd5b50565b600081359050610908816108e2565b92915050565b600060208284031215610924576109236108ab565b5b6000610932848285016108f9565b91505092915050565b6000819050919050565b61094e8161093b565b82525050565b60006020820190506109696000830184610945565b92915050565b6109788161093b565b811461098357600080fd5b50565b6000813590506109958161096f565b92915050565b600080604083850312156109b2576109b16108ab565b5b60006109c0858286016108f9565b92505060206109d185828601610986565b9150509250929050565b6109e4816108d0565b82525050565b60006020820190506109ff60008301846109db565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a4c602083610a05565b9150610a5782610a16565b602082019050919050565b60006020820190508181036000830152610a7b81610a3f565b9050919050565b7f63616e74206e6f742073656e6420746f20616464726573732030000000000000600082015250565b6000610ab8601a83610a05565b9150610ac382610a82565b602082019050919050565b60006020820190508181036000830152610ae781610aab565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b288261093b565b9150610b338361093b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b6c57610b6b610aee565b5b828202905092915050565b6000610b828261093b565b9150610b8d8361093b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bc257610bc1610aee565b5b828201905092915050565b7f7265776172647300000000000000000000000000000000000000000000000000600082015250565b6000610c03600783610a05565b9150610c0e82610bcd565b602082019050919050565b60006020820190508181036000830152610c3281610bf6565b9050919050565b6000604082019050610c4e60008301856109db565b610c5b6020830184610945565b9392505050565b60008115159050919050565b610c7781610c62565b8114610c8257600080fd5b50565b600081519050610c9481610c6e565b92915050565b600060208284031215610cb057610caf6108ab565b5b6000610cbe84828501610c85565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d23602683610a05565b9150610d2e82610cc7565b604082019050919050565b60006020820190508181036000830152610d5281610d16565b9050919050565b6000610d648261093b565b9150610d6f8361093b565b925082821015610d8257610d81610aee565b5b828203905092915050565b6000610d988261093b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610dca57610dc9610aee565b5b60018201905091905056fea26469706673582212205469ca244494ac5f6961e49c34fc2d18035cc90c75cc04d6259d0f74a4990db864736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xC2130BFE EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x13034644 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x52DCDB03 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x317 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH2 0x3C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189 PUSH2 0x71C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A7 PUSH2 0x39F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x263 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP4 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x31F PUSH2 0x71C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x33D PUSH2 0x39F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39D PUSH1 0x0 PUSH2 0x724 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x441 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP3 SWAP2 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0xC9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x534 PUSH2 0x71C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x552 PUSH2 0x39F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59F SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x621 DUP3 DUP3 PUSH2 0x7E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D PUSH2 0x71C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x64B PUSH2 0x39F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x707 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x719 DUP2 PUSH2 0x724 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x89E SWAP1 PUSH2 0xD8D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DB DUP3 PUSH2 0x8B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EB DUP2 PUSH2 0x8D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x908 DUP2 PUSH2 0x8E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH2 0x923 PUSH2 0x8AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x932 DUP5 DUP3 DUP6 ADD PUSH2 0x8F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94E DUP2 PUSH2 0x93B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x969 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x978 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP2 EQ PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x995 DUP2 PUSH2 0x96F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x9B1 PUSH2 0x8AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C0 DUP6 DUP3 DUP7 ADD PUSH2 0x8F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9D1 DUP6 DUP3 DUP7 ADD PUSH2 0x986 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E4 DUP2 PUSH2 0x8D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9FF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4C PUSH1 0x20 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xA57 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA7B DUP2 PUSH2 0xA3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E74206E6F742073656E6420746F20616464726573732030000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB8 PUSH1 0x1A DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC3 DUP3 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE7 DUP2 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB28 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH2 0xB33 DUP4 PUSH2 0x93B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB6C JUMPI PUSH2 0xB6B PUSH2 0xAEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB82 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH2 0xB8D DUP4 PUSH2 0x93B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBC2 JUMPI PUSH2 0xBC1 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7265776172647300000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 PUSH1 0x7 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0E DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC32 DUP2 PUSH2 0xBF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9DB JUMP JUMPDEST PUSH2 0xC5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC77 DUP2 PUSH2 0xC62 JUMP JUMPDEST DUP2 EQ PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC94 DUP2 PUSH2 0xC6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH2 0xCAF PUSH2 0x8AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP5 DUP3 DUP6 ADD PUSH2 0xC85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x26 DUP4 PUSH2 0xA05 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2E DUP3 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD52 DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD64 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH2 0xD6F DUP4 PUSH2 0x93B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xD82 JUMPI PUSH2 0xD81 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD98 DUP3 PUSH2 0x93B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xDCA JUMPI PUSH2 0xDC9 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH10 0xCA244494AC5F6961E49C CALLVALUE 0xFC 0x2D XOR SUB 0x5C 0xC9 0xC PUSH22 0xCC04D6259D0F74A4990DB864736F6C634300080E0033 ",
							"sourceMap": "227:1277:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;533:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1347:145:5;;;:::i;:::-;;843:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1248:93:5;1301:4;1323:7;:11;1331:2;1323:11;;;;;;;;;;;;;;;;1316:18;;1248:93;;;:::o;533:300::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;640:1:5::1;620:22;;:8;:22;;::::0;612:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;682:19;704:7;:17;712:8;704:17;;;;;;;;;;;;;;;;682:39;;731:17;761:6;;751:7;:16;;;;:::i;:::-;731:36;;814:12;797:14;:29;;;;:::i;:::-;777:7;:17;785:8;777:17;;;;;;;;;;;;;;;:49;;;;602:231;;533:300:::0;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1347:145:5:-;1417:1;1395:7;:19;1403:10;1395:19;;;;;;;;;;;;;;;;:23;1387:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1439:5;;;;;;;;;;;:14;;;1454:10;1465:7;:19;1473:10;1465:19;;;;;;;;;;;;;;;;1439:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1347:145::o;843:182::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;951:1:5::1;931:22;;:8;:22;;::::0;923:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;993:25;1001:8;1010:7;993;:25::i;:::-;843:182:::0;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1031:211:5:-;1095:6;1091:145;1108:6;1106:1;:8;1091:145;;;1151:1;1136:7;:11;1144:2;1136:11;;;;;;;;;;;;;;;;:16;1133:58;1171:5;1133:58;1219:6;;1204:7;:11;1212:2;1204:11;;;;;;;;;;;;;;;;:21;;;;;;;:::i;:::-;;;;;;;;1115:3;;;;;:::i;:::-;;;;1091:145;;;;1031:211;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:118::-;2451:24;2469:5;2451:24;:::i;:::-;2446:3;2439:37;2364:118;;:::o;2488:222::-;2581:4;2619:2;2608:9;2604:18;2596:26;;2632:71;2700:1;2689:9;2685:17;2676:6;2632:71;:::i;:::-;2488:222;;;;:::o;2716:169::-;2800:11;2834:6;2829:3;2822:19;2874:4;2869:3;2865:14;2850:29;;2716:169;;;;:::o;2891:182::-;3031:34;3027:1;3019:6;3015:14;3008:58;2891:182;:::o;3079:366::-;3221:3;3242:67;3306:2;3301:3;3242:67;:::i;:::-;3235:74;;3318:93;3407:3;3318:93;:::i;:::-;3436:2;3431:3;3427:12;3420:19;;3079:366;;;:::o;3451:419::-;3617:4;3655:2;3644:9;3640:18;3632:26;;3704:9;3698:4;3694:20;3690:1;3679:9;3675:17;3668:47;3732:131;3858:4;3732:131;:::i;:::-;3724:139;;3451:419;;;:::o;3876:176::-;4016:28;4012:1;4004:6;4000:14;3993:52;3876:176;:::o;4058:366::-;4200:3;4221:67;4285:2;4280:3;4221:67;:::i;:::-;4214:74;;4297:93;4386:3;4297:93;:::i;:::-;4415:2;4410:3;4406:12;4399:19;;4058:366;;;:::o;4430:419::-;4596:4;4634:2;4623:9;4619:18;4611:26;;4683:9;4677:4;4673:20;4669:1;4658:9;4654:17;4647:47;4711:131;4837:4;4711:131;:::i;:::-;4703:139;;4430:419;;;:::o;4855:180::-;4903:77;4900:1;4893:88;5000:4;4997:1;4990:15;5024:4;5021:1;5014:15;5041:348;5081:7;5104:20;5122:1;5104:20;:::i;:::-;5099:25;;5138:20;5156:1;5138:20;:::i;:::-;5133:25;;5326:1;5258:66;5254:74;5251:1;5248:81;5243:1;5236:9;5229:17;5225:105;5222:131;;;5333:18;;:::i;:::-;5222:131;5381:1;5378;5374:9;5363:20;;5041:348;;;;:::o;5395:305::-;5435:3;5454:20;5472:1;5454:20;:::i;:::-;5449:25;;5488:20;5506:1;5488:20;:::i;:::-;5483:25;;5642:1;5574:66;5570:74;5567:1;5564:81;5561:107;;;5648:18;;:::i;:::-;5561:107;5692:1;5689;5685:9;5678:16;;5395:305;;;;:::o;5706:157::-;5846:9;5842:1;5834:6;5830:14;5823:33;5706:157;:::o;5869:365::-;6011:3;6032:66;6096:1;6091:3;6032:66;:::i;:::-;6025:73;;6107:93;6196:3;6107:93;:::i;:::-;6225:2;6220:3;6216:12;6209:19;;5869:365;;;:::o;6240:419::-;6406:4;6444:2;6433:9;6429:18;6421:26;;6493:9;6487:4;6483:20;6479:1;6468:9;6464:17;6457:47;6521:131;6647:4;6521:131;:::i;:::-;6513:139;;6240:419;;;:::o;6665:332::-;6786:4;6824:2;6813:9;6809:18;6801:26;;6837:71;6905:1;6894:9;6890:17;6881:6;6837:71;:::i;:::-;6918:72;6986:2;6975:9;6971:18;6962:6;6918:72;:::i;:::-;6665:332;;;;;:::o;7003:90::-;7037:7;7080:5;7073:13;7066:21;7055:32;;7003:90;;;:::o;7099:116::-;7169:21;7184:5;7169:21;:::i;:::-;7162:5;7159:32;7149:60;;7205:1;7202;7195:12;7149:60;7099:116;:::o;7221:137::-;7275:5;7306:6;7300:13;7291:22;;7322:30;7346:5;7322:30;:::i;:::-;7221:137;;;;:::o;7364:345::-;7431:6;7480:2;7468:9;7459:7;7455:23;7451:32;7448:119;;;7486:79;;:::i;:::-;7448:119;7606:1;7631:61;7684:7;7675:6;7664:9;7660:22;7631:61;:::i;:::-;7621:71;;7577:125;7364:345;;;;:::o;7715:225::-;7855:34;7851:1;7843:6;7839:14;7832:58;7924:8;7919:2;7911:6;7907:15;7900:33;7715:225;:::o;7946:366::-;8088:3;8109:67;8173:2;8168:3;8109:67;:::i;:::-;8102:74;;8185:93;8274:3;8185:93;:::i;:::-;8303:2;8298:3;8294:12;8287:19;;7946:366;;;:::o;8318:419::-;8484:4;8522:2;8511:9;8507:18;8499:26;;8571:9;8565:4;8561:20;8557:1;8546:9;8542:17;8535:47;8599:131;8725:4;8599:131;:::i;:::-;8591:139;;8318:419;;;:::o;8743:191::-;8783:4;8803:20;8821:1;8803:20;:::i;:::-;8798:25;;8837:20;8855:1;8837:20;:::i;:::-;8832:25;;8876:1;8873;8870:8;8867:34;;;8881:18;;:::i;:::-;8867:34;8926:1;8923;8919:9;8911:17;;8743:191;;;;:::o;8940:233::-;8979:3;9002:24;9020:5;9002:24;:::i;:::-;8993:33;;9048:66;9041:5;9038:77;9035:103;;9118:18;;:::i;:::-;9035:103;9165:1;9158:5;9154:13;9147:20;;8940:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "719000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addreward(address,uint256)": "infinite",
								"claimReward()": "infinite",
								"owner()": "2522",
								"removeReward(address,uint256)": "infinite",
								"renounceOwnership()": "30419",
								"showrewards(address)": "2842",
								"transferOwnership(address)": "30786"
							},
							"internal": {
								"removal(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 227,
									"end": 1504,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 323,
									"end": 326,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 301,
									"end": 326,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 301,
									"end": 326,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 460,
									"end": 527,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 527,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 460,
									"end": 527,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 460,
									"end": 527,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 460,
									"end": 527,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 460,
									"end": 527,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 460,
									"end": 527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 460,
									"end": 527,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 513,
									"end": 519,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 498,
									"end": 503,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 498,
									"end": 503,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 498,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 498,
									"end": 520,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 498,
									"end": 520,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 498,
									"end": 520,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 498,
									"end": 520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 460,
									"end": 527,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 1504,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205469ca244494ac5f6961e49c34fc2d18035cc90c75cc04d6259d0f74a4990db864736f6c634300080e0033",
									".code": [
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "B88A802F"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "C2130BFE"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "13034644"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "52DCDB03"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 1504,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1248,
											"end": 1341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1248,
											"end": 1341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1248,
											"end": 1341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 533,
											"end": 833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 533,
											"end": 833,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 533,
											"end": 833,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 533,
											"end": 833,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 533,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 533,
											"end": 833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 533,
											"end": 833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1347,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1347,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1347,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1347,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1492,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 843,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 843,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1330,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1333,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1334,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 620,
											"end": 628,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 620,
											"end": 642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 620,
											"end": 642,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 612,
											"end": 672,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 612,
											"end": 672,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 682,
											"end": 701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 720,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 704,
											"end": 721,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 682,
											"end": 721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 682,
											"end": 721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 731,
											"end": 748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 761,
											"end": 767,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 751,
											"end": 758,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 751,
											"end": 767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 751,
											"end": 767,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 751,
											"end": 767,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 751,
											"end": 767,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 767,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 751,
											"end": 767,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 731,
											"end": 767,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 731,
											"end": 767,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 814,
											"end": 826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 797,
											"end": 811,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 797,
											"end": 826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 797,
											"end": 826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 797,
											"end": 826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 797,
											"end": 826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 797,
											"end": 826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 797,
											"end": 826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 797,
											"end": 826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 793,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 794,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 777,
											"end": 826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 777,
											"end": 826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 777,
											"end": 826,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 777,
											"end": 826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 833,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 833,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1492,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1347,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1418,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1387,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1387,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1453,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1453,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1483,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1439,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1439,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 953,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 931,
											"end": 939,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 931,
											"end": 953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 953,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 931,
											"end": 953,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 923,
											"end": 983,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 923,
											"end": 983,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1001,
											"end": 1009,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 993,
											"end": 1018,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 993,
											"end": 1018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 843,
											"end": 1025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1998,
											"end": 2071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1242,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1031,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1106,
											"end": 1107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1143,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1152,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1191,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1133,
											"end": 1191,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1225,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1219,
											"end": 1225,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1214,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1204,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1115,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2632,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2832,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2841,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2878,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2879,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 3073,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2891,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3066,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 3073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 3073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3445,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3079,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3306,
											"end": 3308,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3301,
											"end": 3304,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3242,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3309,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3242,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3407,
											"end": 3410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3318,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3411,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3318,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3870,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3451,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3655,
											"end": 3657,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3714,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3688,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3732,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3863,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3732,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3870,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 4052,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3876,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4044,
											"name": "PUSH",
											"source": 6,
											"value": "63616E74206E6F742073656E6420746F20616464726573732030000000000000"
										},
										{
											"begin": 4012,
											"end": 4013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4010,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 4052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 4052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4424,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4058,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4285,
											"end": 4287,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 4280,
											"end": 4283,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4221,
											"end": 4288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4288,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4221,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4386,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4297,
											"end": 4390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4390,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4297,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4415,
											"end": 4417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4410,
											"end": 4413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4399,
											"end": 4418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4399,
											"end": 4418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4849,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4430,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4683,
											"end": 4692,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4673,
											"end": 4693,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4667,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4711,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4837,
											"end": 4841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4711,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4711,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4711,
											"end": 4842,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4711,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4703,
											"end": 4842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4703,
											"end": 4842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4855,
											"end": 5035,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4855,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4903,
											"end": 4980,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4900,
											"end": 4901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4981,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5004,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4997,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5028,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5021,
											"end": 5022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5029,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5389,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5041,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5104,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5124,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5138,
											"end": 5158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5158,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5324,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5254,
											"end": 5328,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5251,
											"end": 5252,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5329,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5243,
											"end": 5244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5236,
											"end": 5245,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5246,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5330,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5222,
											"end": 5353,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5222,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5222,
											"end": 5353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5333,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5222,
											"end": 5353,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5222,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5383,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5389,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5700,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5395,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5472,
											"end": 5473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5454,
											"end": 5474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5454,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5506,
											"end": 5507,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5488,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5483,
											"end": 5508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5483,
											"end": 5508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5640,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5570,
											"end": 5644,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5645,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5668,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5561,
											"end": 5668,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5648,
											"end": 5666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5668,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5561,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5678,
											"end": 5694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5700,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5863,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5706,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5846,
											"end": 5855,
											"name": "PUSH",
											"source": 6,
											"value": "7265776172647300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5842,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 6234,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5869,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6011,
											"end": 6014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6096,
											"end": 6097,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6091,
											"end": 6094,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6032,
											"end": 6098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6098,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6032,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6196,
											"end": 6199,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6107,
											"end": 6200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6200,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6107,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6227,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6220,
											"end": 6223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 6234,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 6234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 6234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 6234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6659,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6240,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6446,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6442,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6503,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6457,
											"end": 6504,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6647,
											"end": 6651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6521,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6652,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6521,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6240,
											"end": 6659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6997,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6665,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6826,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6813,
											"end": 6822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6809,
											"end": 6827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6801,
											"end": 6827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6801,
											"end": 6827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6905,
											"end": 6906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6890,
											"end": 6907,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6881,
											"end": 6887,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6837,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6908,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6837,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6986,
											"end": 6988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6962,
											"end": 6968,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6918,
											"end": 6990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6990,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6918,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6997,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6997,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7093,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7003,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7080,
											"end": 7085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7073,
											"end": 7086,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7066,
											"end": 7087,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7215,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7099,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7169,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7184,
											"end": 7189,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7169,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7169,
											"end": 7190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7169,
											"end": 7190,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7169,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7162,
											"end": 7167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7191,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 7149,
											"end": 7209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7195,
											"end": 7207,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7209,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 7149,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7358,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7221,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7275,
											"end": 7280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7312,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7313,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7291,
											"end": 7313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7291,
											"end": 7313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 7346,
											"end": 7351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7322,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 7352,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 7322,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7358,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7709,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7364,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7431,
											"end": 7437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7482,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7468,
											"end": 7477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7466,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7455,
											"end": 7478,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7451,
											"end": 7483,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 7448,
											"end": 7567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7486,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 7486,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 7486,
											"end": 7565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7486,
											"end": 7565,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 7486,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7567,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 7448,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7606,
											"end": 7607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 7684,
											"end": 7691,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7660,
											"end": 7682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7631,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7692,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 7631,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 7702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7709,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7715,
											"end": 7940,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 7715,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7889,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7851,
											"end": 7852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7853,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 7932,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7911,
											"end": 7917,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 7922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7715,
											"end": 7940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7715,
											"end": 7940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7946,
											"end": 8312,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7946,
											"end": 8312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8109,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8173,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 8168,
											"end": 8171,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8109,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 8109,
											"end": 8176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8109,
											"end": 8176,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8109,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8274,
											"end": 8277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 8185,
											"end": 8278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8185,
											"end": 8278,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8185,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8303,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8298,
											"end": 8301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8294,
											"end": 8306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8287,
											"end": 8306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8287,
											"end": 8306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7946,
											"end": 8312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7946,
											"end": 8312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7946,
											"end": 8312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7946,
											"end": 8312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8737,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 8318,
											"end": 8737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8522,
											"end": 8524,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8511,
											"end": 8520,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8507,
											"end": 8525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8499,
											"end": 8525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8580,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8565,
											"end": 8569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8581,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8546,
											"end": 8555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8542,
											"end": 8559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8535,
											"end": 8582,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8599,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8725,
											"end": 8729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8599,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 8599,
											"end": 8730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8599,
											"end": 8730,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8599,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8591,
											"end": 8730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8591,
											"end": 8730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8737,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8934,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 8743,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8783,
											"end": 8787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8821,
											"end": 8822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 8803,
											"end": 8823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8823,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8803,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8823,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8855,
											"end": 8856,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 8837,
											"end": 8857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 8857,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 8857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8878,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8867,
											"end": 8901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8867,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8867,
											"end": 8901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8881,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8881,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 8881,
											"end": 8899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8881,
											"end": 8899,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8881,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8867,
											"end": 8901,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8867,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8926,
											"end": 8927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8923,
											"end": 8924,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8928,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 8928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8911,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8934,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8743,
											"end": 8934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8940,
											"end": 9173,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8940,
											"end": 9173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8979,
											"end": 8982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9002,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 9020,
											"end": 9025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9002,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 9002,
											"end": 9026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9002,
											"end": 9026,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 9002,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9048,
											"end": 9114,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9041,
											"end": 9046,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9038,
											"end": 9115,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9035,
											"end": 9138,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 9118,
											"end": 9136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9035,
											"end": 9138,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9035,
											"end": 9138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9165,
											"end": 9166,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9158,
											"end": 9163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9154,
											"end": 9167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9147,
											"end": 9167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9147,
											"end": 9167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8940,
											"end": 9173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8940,
											"end": 9173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8940,
											"end": 9173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8940,
											"end": 9173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"reward.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addreward(address,uint256)": "52dcdb03",
							"claimReward()": "b88a802f",
							"owner()": "8da5cb5b",
							"removeReward(address,uint256)": "c2130bfe",
							"renounceOwnership()": "715018a6",
							"showrewards(address)": "13034644",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addreward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"removeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"}],\"name\":\"showrewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"reward.sol\":\"ffreecap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"reward.sol\":{\"keccak256\":\"0xb573349daf22f7a00174f8b65daa95f7efcee084c794133328ec4ca17c07b26b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fa329e19dfcc69010b9574b1c461672c9da57834058523e4eb1efbac4a56f71\",\"dweb:/ipfs/QmTjBqH5d4t14E6Eq8YHumzXzUfcbhyAuYYQtYmZ7wduLD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "reward.sol:ffreecap",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 341,
								"contract": "reward.sol:ffreecap",
								"label": "admin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 344,
								"contract": "reward.sol:ffreecap",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)182"
							},
							{
								"astId": 347,
								"contract": "reward.sol:ffreecap",
								"label": "reward",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 349,
								"contract": "reward.sol:ffreecap",
								"label": "nftcounter",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 353,
								"contract": "reward.sol:ffreecap",
								"label": "rewards",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 357,
								"contract": "reward.sol:ffreecap",
								"label": "rewardholder",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)182": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 321,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								320
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 116,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 125,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 182,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 182,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 182,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 182,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 182,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 182,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							332
						],
						"IERC721": [
							298
						]
					},
					"id": 299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 333,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 187,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 332,
										"src": "271:7:2"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 298,
							"linearizedBaseContracts": [
								298,
								332
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 197,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 206,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 215,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 298,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 298,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 298,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2682:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2704:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2724:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:2"
									},
									"scope": 298,
									"src": "2647:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3301:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3323:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3343:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 298,
									"src": "3270:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3854:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3866:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:2"
									},
									"scope": 298,
									"src": "3837:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4239:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4257:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:2"
									},
									"scope": 298,
									"src": "4212:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "4453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "4493:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:2"
									},
									"scope": 298,
									"src": "4432:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4686:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4701:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4742:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:2"
									},
									"scope": 298,
									"src": "4660:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 299,
							"src": "250:4500:2",
							"usedErrors": []
						}
					],
					"src": "108:4643:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 300,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 301,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 306,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 305,
												"id": 308,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 320,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 315,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 314,
												"id": 317,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 320,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							332
						]
					},
					"id": 333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 332,
							"linearizedBaseContracts": [
								332
							],
							"name": "IERC165",
							"nameLocation": "415:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "801:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 325,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:4"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:4"
									},
									"scope": 332,
									"src": "774:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 333,
							"src": "405:447:4",
							"usedErrors": []
						}
					],
					"src": "100:753:4"
				},
				"id": 4
			},
			"reward.sol": {
				"ast": {
					"absolutePath": "reward.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC165": [
							332
						],
						"IERC20": [
							182
						],
						"IERC721": [
							298
						],
						"Ownable": [
							104
						],
						"ffreecap": [
							506
						]
					},
					"id": 507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 183,
							"src": "57:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 105,
							"src": "114:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 507,
							"sourceUnit": 299,
							"src": "167:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 338,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "248:7:5"
									},
									"id": 339,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:5"
								}
							],
							"canonicalName": "ffreecap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 506,
							"linearizedBaseContracts": [
								506,
								104,
								320
							],
							"name": "ffreecap",
							"nameLocation": "236:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 341,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "271:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "263:13:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 340,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 344,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "289:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "282:12:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$182",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 343,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 342,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 182,
											"src": "282:6:5"
										},
										"referencedDeclaration": 182,
										"src": "282:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$182",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 347,
									"mutability": "mutable",
									"name": "reward",
									"nameLocation": "314:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "301:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 345,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "301:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "nftcounter",
									"nameLocation": "345:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "332:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 348,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "332:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "394:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "361:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 352,
										"keyType": {
											"id": 350,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "369:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "361:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 351,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "380:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "rewardholder",
									"nameLocation": "440:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 506,
									"src": "407:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 356,
										"keyType": {
											"id": 354,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "415:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "407:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 355,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "426:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "488:39:5",
										"statements": [
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 362,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "498:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$182",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 364,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "513:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 363,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "506:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "506:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$182",
															"typeString": "contract IERC20"
														}
													},
													"src": "498:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "498:22:5"
											}
										]
									},
									"id": 369,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "480:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "472:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:16:5"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:0:5"
									},
									"scope": 506,
									"src": "460:67:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "602:231:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "620:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "640:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "632:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 380,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "632:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "632:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "620:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e74206e6f742073656e6420746f20616464726573732030",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "643:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402",
																"typeString": "literal_string \"cant not send to address 0\""
															},
															"value": "cant not send to address 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402",
																"typeString": "literal_string \"cant not send to address 0\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "612:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "612:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "612:60:5"
											},
											{
												"assignments": [
													389
												],
												"declarations": [
													{
														"constant": false,
														"id": 389,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "687:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "682:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 388,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "682:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"baseExpression": {
														"id": 390,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "704:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 392,
													"indexExpression": {
														"id": 391,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "712:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "704:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "682:39:5"
											},
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "rewardamount",
														"nameLocation": "736:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "731:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 394,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "731:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 396,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "751:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 397,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "761:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "751:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "731:36:5"
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 400,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "777:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "785:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "777:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 403,
															"name": "currentBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "797:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 404,
															"name": "rewardamount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "814:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "797:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "777:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "777:49:5"
											}
										]
									},
									"functionSelector": "52dcdb03",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 375,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "592:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "592:9:5"
										}
									],
									"name": "addreward",
									"nameLocation": "542:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "560:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "552:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "574:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "569:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "569:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:31:5"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:0:5"
									},
									"scope": 506,
									"src": "533:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "913:112:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 419,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "931:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "951:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "943:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 420,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "943:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "943:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "931:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e74206e6f742073656e6420746f20616464726573732030",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402",
																"typeString": "literal_string \"cant not send to address 0\""
															},
															"value": "cant not send to address 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0991efaf44782ebfec7a2aa4cbeb20f41279a8df1f2a742b7111c0f6a0735402",
																"typeString": "literal_string \"cant not send to address 0\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "923:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "923:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "923:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1001:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1010:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 428,
														"name": "removal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "993:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "993:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "993:25:5"
											}
										]
									},
									"functionSelector": "c2130bfe",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 415,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "904:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "904:9:5"
										}
									],
									"name": "removeReward",
									"nameLocation": "852:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "865:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "887:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "882:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "882:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:31:5"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:5"
									},
									"scope": 506,
									"src": "843:182:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "1081:161:5",
										"statements": [
											{
												"body": {
													"id": 465,
													"nodeType": "Block",
													"src": "1119:117:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 451,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "1136:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 453,
																	"indexExpression": {
																		"id": 452,
																		"name": "ad",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "1144:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1136:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1151:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1136:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 458,
															"nodeType": "IfStatement",
															"src": "1133:58:5",
															"trueBody": {
																"id": 457,
																"nodeType": "Block",
																"src": "1153:38:5",
																"statements": [
																	{
																		"id": 456,
																		"nodeType": "Break",
																		"src": "1171:5:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 459,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "1204:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 461,
																	"indexExpression": {
																		"id": 460,
																		"name": "ad",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "1212:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1204:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 462,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "1219:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1204:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 464,
															"nodeType": "ExpressionStatement",
															"src": "1204:21:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 445,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1106:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 446,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1108:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1106:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 466,
												"initializationExpression": {
													"assignments": [
														442
													],
													"declarations": [
														{
															"constant": false,
															"id": 442,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1100:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 466,
															"src": "1095:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 441,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1095:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 444,
													"initialValue": {
														"hexValue": "30",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1104:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1095:10:5"
												},
												"loopExpression": {
													"expression": {
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1115:3:5",
														"subExpression": {
															"id": 448,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "1115:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 450,
													"nodeType": "ExpressionStatement",
													"src": "1115:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1091:145:5"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removal",
									"nameLocation": "1040:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "ad",
												"nameLocation": "1056:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1048:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1064:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1059:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1059:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:24:5"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:0:5"
									},
									"scope": 506,
									"src": "1031:211:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "1306:35:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 475,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1323:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 477,
													"indexExpression": {
														"id": 476,
														"name": "ad",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "1331:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1323:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 474,
												"id": 478,
												"nodeType": "Return",
												"src": "1316:18:5"
											}
										]
									},
									"functionSelector": "13034644",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showrewards",
									"nameLocation": "1257:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "ad",
												"nameLocation": "1277:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1269:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:12:5"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1301:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1301:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:6:5"
									},
									"scope": 506,
									"src": "1248:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "1377:115:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 484,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "1395:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"expression": {
																		"id": 485,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1403:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1403:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1395:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1417:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1395:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "72657761726473",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1419:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde",
																"typeString": "literal_string \"rewards\""
															},
															"value": "rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34c4f69c5a540b12dc1972f35b6a4d869e650b9e8617cf155838305cfb43cfde",
																"typeString": "literal_string \"rewards\""
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1387:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1387:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "1387:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 496,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1454:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1454:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 498,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 501,
															"indexExpression": {
																"expression": {
																	"id": 499,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1473:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1473:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1465:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "1439:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "1439:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1439:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1439:46:5"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "1356:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1367:2:5"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:5"
									},
									"scope": 506,
									"src": "1347:145:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 507,
							"src": "227:1277:5",
							"usedErrors": []
						}
					],
					"src": "32:1472:5"
				},
				"id": 5
			}
		}
	}
}